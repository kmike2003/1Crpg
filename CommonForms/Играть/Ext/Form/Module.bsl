#Область ОписаниеПеременных
    

#КонецОбласти

#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура Настройки(Команда)
	ОткрытьФорму("РегистрСведений.РегистрНастроек.ФормаСписка", Новый Структура);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьИгру(Команда)
	Оповещение = Новый ОписаниеОповещения("ОткрытьИгру", ЭтотОбъект);
	ОткрытьФорму("Справочник.Игроки.ФормаОбъекта",Новый Структура,ЭтотОбъект,,,,Оповещение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСохранение(Команда)
	Оповещение = Новый ОписаниеОповещения("ОткрытьИгру", ЭтотОбъект);
	ОткрытьФорму("Справочник.Игроки.ФормаСписка",Новый Структура,ЭтотОбъект,,,,Оповещение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьИгру(Команда)
	ОткрытьФорму("ОбщаяФорма.Игра", Новый Структура("Игрок", ПолучитьПоследнегоИгрока()));
	ЭтаФорма.Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Функция ИнициализацияНовогоИгрока()
	Если ЗначениеЗаполнено(РеквезитТекущийИгрок) тогда
		ЗначенияПоУмолчанию = Новый Структура;
		ЗначенияПоУмолчанию.Вставить("Сила", 1);
		ЗначенияПоУмолчанию.Вставить("Ловкость", 1);
	    ЗначенияПоУмолчанию.Вставить("Выносливость", 1);
	    ЗначенияПоУмолчанию.Вставить("Интелект", 1);
	    ЗначенияПоУмолчанию.Вставить("ЗащитаВЕдиницах", 1);
	    ЗначенияПоУмолчанию.Вставить("ЗащитаВПроцентах", 0);
	    ЗначенияПоУмолчанию.Вставить("ШансУворота", 0);
	    ЗначенияПоУмолчанию.Вставить("Мана", 5);
	    ЗначенияПоУмолчанию.Вставить("Стамина", 25);
	    ЗначенияПоУмолчанию.Вставить("МаксСтамина", 25);
	    ЗначенияПоУмолчанию.Вставить("МаксМана", 5);
	    ЗначенияПоУмолчанию.Вставить("ФизическийУрон", 5);
	    ЗначенияПоУмолчанию.Вставить("МагическийУрон", 0);
	    ЗначенияПоУмолчанию.Вставить("ПробивнойУрон", 0);
		ЗначенияПоУмолчанию.Вставить("Здоровье", 100);
		ЗначенияПоУмолчанию.Вставить("МаксЗдоровье", 100);
		ЗначенияПоУмолчанию.Вставить("Уровень", 1);
		ЗначенияПоУмолчанию.Вставить("Опыт", 0);
		ЗначенияПоУмолчанию.Вставить("Внимательность", 1);
		ЗначенияПоУмолчанию.Вставить("Удача", 1);

		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЗначениеХарактеристикИгроков.Игрок КАК Игрок,
			|	ЗначениеХарактеристикИгроков.Характеристика КАК Характеристика,
			|	ЗначениеХарактеристикИгроков.Значение КАК Значение
			|ИЗ
			|	РегистрСведений.ЗначениеХарактеристикИгроков КАК ЗначениеХарактеристикИгроков
			|ГДЕ
			|	ЗначениеХарактеристикИгроков.Игрок.Ссылка = &Игрок";	
		Запрос.УстановитьПараметр("Игрок", РеквезитТекущийИгрок);
		РезультатЗапроса = Запрос.Выполнить().Выбрать();
		
		Если РезультатЗапроса.Количество() = 0 Тогда
			НаборЗаписей = РегистрыСведений.ЗначениеХарактеристикИгроков.СоздатьНаборЗаписей();
			ВыборкаХарактеристик = ПланыВидовХарактеристик.ВидыХарактеристикИгроков.Выбрать();
			Пока ВыборкаХарактеристик.Следующий() Цикл
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.Игрок = РеквезитТекущийИгрок;
				НоваяЗапись.Характеристика = ВыборкаХарактеристик.Ссылка;               
				НоваяЗапись.Значение = ЗначенияПоУмолчанию[ВыборкаХарактеристик.Наименование]; 
			КонецЦикла;
			НаборЗаписей.Записать(Ложь);
			
			НаборЗаписей = РегистрыСведений.ЭкипировкаПерсонажей.СоздатьНаборЗаписей();
			Для каждого СлотЭкипировки из Перечисления.ВидыЭкипировки Цикл
				//НетПредмет = Справочники.Предметы.НайтиПоНаименованию("НетЭкипировки" + СлотЭкипировки);
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.Игрок = РеквезитТекущийИгрок;
				НоваяЗапись.Экипировка = СлотЭкипировки;
				НоваяЗапись.Предмет = Неопределено;
			КонецЦикла;
			НаборЗаписей.Записать(Ложь);	
		КонецЕсли;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура ЗапомнитьНастройки(игрок)
	НаборЗаписей = РегистрыСведений.РегистрНастроек.СоздатьНаборЗаписей();
	НоваяЗапись = наборЗаписей.Добавить();
	НоваяЗапись.Название = "ПоследнийИгрок";
	НоваяЗапись.Значение = Игрок;
	НаборЗаписей.Записать();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьИгру(Параметры, ВторойПараметр) Экспорт
	Если ЗначениеЗаполнено(Параметры) тогда
		Игрок = НайтиИгрокаПоНаименованию(Параметры);
		Если ЗначениеЗаполнено(Игрок) Тогда
			РеквезитТекущийИгрок = Игрок;  
			ИнициализацияНовогоИгрока();
			ЗапомнитьНастройки(Игрок);
			ОткрытьФорму("ОбщаяФорма.Игра", Новый Структура("Игрок", игрок));
		Иначе
			Сообщить("Ошибка: получен параметр неверного типа.");
		КонецЕсли;
	Иначе
        Сообщить("Ошибка: параметр не задан.");
	КонецЕсли;
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаСервере
Функция НайтиИгрокаПоНаименованию(НаименованиеИгрока) Экспорт
    Возврат Справочники.Игроки.НайтиПоНаименованию(НаименованиеИгрока); 
КонецФункции

&НаСервере
Функция ПолучитьПоследнегоИгрока() Экспорт
	Перем ПоследнийИгрок;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РегистрНастроек.Название КАК Название,
		|	РегистрНастроек.Значение КАК Значение
		|ИЗ
		|	РегистрСведений.РегистрНастроек КАК РегистрНастроек";
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();	
	пока РезультатЗапроса.Следующий() Цикл
		Если РезультатЗапроса.Название = "ПоследнийИгрок" тогда
			ПоследнийИгрок = РезультатЗапроса.Значение;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ПоследнийИгрок <> Неопределено тогда
		Возврат ПоследнийИгрок;
	Иначе		
		Запрос = Новый Запрос;
	    Запрос.Текст = "ВЫБРАТЬ
			|	Игроки.Ссылка КАК Ссылка,
			|	Игроки.Код КАК Код
			|ИЗ
			|	Справочник.Игроки КАК Игроки
			|
			|УПОРЯДОЧИТЬ ПО
			|	Код УБЫВ";
	    Результат = Запрос.Выполнить().Выбрать();
	    Если Результат.Следующий() Тогда
	        Возврат Результат.Ссылка;
	    Иначе
	        Возврат Неопределено;
	    КонецЕсли;
	КонецЕсли;
КонецФункции
#КонецОбласти

